// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cr

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opListRobotAccountsCommon = "ListRobotAccounts"

// ListRobotAccountsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ListRobotAccountsCommon operation. The "output" return
// value will be populated with the ListRobotAccountsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRobotAccountsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRobotAccountsCommon Send returns without error.
//
// See ListRobotAccountsCommon for more information on using the ListRobotAccountsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRobotAccountsCommonRequest method.
//    req, resp := client.ListRobotAccountsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CR) ListRobotAccountsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRobotAccountsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRobotAccountsCommon API operation for CR.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CR's
// API operation ListRobotAccountsCommon for usage and error information.
func (c *CR) ListRobotAccountsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRobotAccountsCommonRequest(input)
	return out, req.Send()
}

// ListRobotAccountsCommonWithContext is the same as ListRobotAccountsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRobotAccountsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CR) ListRobotAccountsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRobotAccountsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRobotAccounts = "ListRobotAccounts"

// ListRobotAccountsRequest generates a "byteplus/request.Request" representing the
// client's request for the ListRobotAccounts operation. The "output" return
// value will be populated with the ListRobotAccountsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRobotAccountsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRobotAccountsCommon Send returns without error.
//
// See ListRobotAccounts for more information on using the ListRobotAccounts
// API call, and error handling.
//
//    // Example sending a request using the ListRobotAccountsRequest method.
//    req, resp := client.ListRobotAccountsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CR) ListRobotAccountsRequest(input *ListRobotAccountsInput) (req *request.Request, output *ListRobotAccountsOutput) {
	op := &request.Operation{
		Name:       opListRobotAccounts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRobotAccountsInput{}
	}

	output = &ListRobotAccountsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRobotAccounts API operation for CR.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for CR's
// API operation ListRobotAccounts for usage and error information.
func (c *CR) ListRobotAccounts(input *ListRobotAccountsInput) (*ListRobotAccountsOutput, error) {
	req, out := c.ListRobotAccountsRequest(input)
	return out, req.Send()
}

// ListRobotAccountsWithContext is the same as ListRobotAccounts with the addition of
// the ability to pass a context and additional request options.
//
// See ListRobotAccounts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CR) ListRobotAccountsWithContext(ctx byteplus.Context, input *ListRobotAccountsInput, opts ...request.Option) (*ListRobotAccountsOutput, error) {
	req, out := c.ListRobotAccountsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListRobotAccountsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Descriptions []*string `type:"list" json:",omitempty"`

	Disabled *bool `type:"boolean" json:",omitempty"`

	Usernames []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRobotAccountsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRobotAccountsInput) GoString() string {
	return s.String()
}

// SetDescriptions sets the Descriptions field's value.
func (s *FilterForListRobotAccountsInput) SetDescriptions(v []*string) *FilterForListRobotAccountsInput {
	s.Descriptions = v
	return s
}

// SetDisabled sets the Disabled field's value.
func (s *FilterForListRobotAccountsInput) SetDisabled(v bool) *FilterForListRobotAccountsInput {
	s.Disabled = &v
	return s
}

// SetUsernames sets the Usernames field's value.
func (s *FilterForListRobotAccountsInput) SetUsernames(v []*string) *FilterForListRobotAccountsInput {
	s.Usernames = v
	return s
}

type ItemForListRobotAccountsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Disabled *bool `type:"boolean" json:",omitempty"`

	ExpiresAt *int64 `type:"int64" json:",omitempty"`

	Permissions []*PermissionForListRobotAccountsOutput `type:"list" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListRobotAccountsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListRobotAccountsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListRobotAccountsOutput) SetCreateTime(v string) *ItemForListRobotAccountsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListRobotAccountsOutput) SetDescription(v string) *ItemForListRobotAccountsOutput {
	s.Description = &v
	return s
}

// SetDisabled sets the Disabled field's value.
func (s *ItemForListRobotAccountsOutput) SetDisabled(v bool) *ItemForListRobotAccountsOutput {
	s.Disabled = &v
	return s
}

// SetExpiresAt sets the ExpiresAt field's value.
func (s *ItemForListRobotAccountsOutput) SetExpiresAt(v int64) *ItemForListRobotAccountsOutput {
	s.ExpiresAt = &v
	return s
}

// SetPermissions sets the Permissions field's value.
func (s *ItemForListRobotAccountsOutput) SetPermissions(v []*PermissionForListRobotAccountsOutput) *ItemForListRobotAccountsOutput {
	s.Permissions = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListRobotAccountsOutput) SetUpdateTime(v string) *ItemForListRobotAccountsOutput {
	s.UpdateTime = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *ItemForListRobotAccountsOutput) SetUsername(v string) *ItemForListRobotAccountsOutput {
	s.Username = &v
	return s
}

type ListRobotAccountsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListRobotAccountsInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `min:"1" max:"100" type:"int64" json:",omitempty"`

	// Registry is a required field
	Registry *string `min:"3" max:"30" type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListRobotAccountsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRobotAccountsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRobotAccountsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListRobotAccountsInput"}
	if s.PageSize != nil && *s.PageSize < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageSize", 1))
	}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}
	if s.Registry == nil {
		invalidParams.Add(request.NewErrParamRequired("Registry"))
	}
	if s.Registry != nil && len(*s.Registry) < 3 {
		invalidParams.Add(request.NewErrParamMinLen("Registry", 3))
	}
	if s.Registry != nil && len(*s.Registry) > 30 {
		invalidParams.Add(request.NewErrParamMaxLen("Registry", 30, *s.Registry))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListRobotAccountsInput) SetFilter(v *FilterForListRobotAccountsInput) *ListRobotAccountsInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRobotAccountsInput) SetPageNumber(v int64) *ListRobotAccountsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRobotAccountsInput) SetPageSize(v int64) *ListRobotAccountsInput {
	s.PageSize = &v
	return s
}

// SetRegistry sets the Registry field's value.
func (s *ListRobotAccountsInput) SetRegistry(v string) *ListRobotAccountsInput {
	s.Registry = &v
	return s
}

type ListRobotAccountsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListRobotAccountsOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRobotAccountsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRobotAccountsOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListRobotAccountsOutput) SetItems(v []*ItemForListRobotAccountsOutput) *ListRobotAccountsOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRobotAccountsOutput) SetPageNumber(v int64) *ListRobotAccountsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRobotAccountsOutput) SetPageSize(v int64) *ListRobotAccountsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRobotAccountsOutput) SetTotalCount(v int64) *ListRobotAccountsOutput {
	s.TotalCount = &v
	return s
}

type PermissionForListRobotAccountsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Actions []*string `type:"list" json:",omitempty"`

	Resource *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PermissionForListRobotAccountsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s PermissionForListRobotAccountsOutput) GoString() string {
	return s.String()
}

// SetActions sets the Actions field's value.
func (s *PermissionForListRobotAccountsOutput) SetActions(v []*string) *PermissionForListRobotAccountsOutput {
	s.Actions = v
	return s
}

// SetResource sets the Resource field's value.
func (s *PermissionForListRobotAccountsOutput) SetResource(v string) *PermissionForListRobotAccountsOutput {
	s.Resource = &v
	return s
}
