// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ark

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opBotsChatCompletionsCommon = "BotsChatCompletions"

// BotsChatCompletionsCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the BotsChatCompletionsCommon operation. The "output" return
// value will be populated with the BotsChatCompletionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BotsChatCompletionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after BotsChatCompletionsCommon Send returns without error.
//
// See BotsChatCompletionsCommon for more information on using the BotsChatCompletionsCommon
// API call, and error handling.
//
//    // Example sending a request using the BotsChatCompletionsCommonRequest method.
//    req, resp := client.BotsChatCompletionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) BotsChatCompletionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBotsChatCompletionsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BotsChatCompletionsCommon API operation for ARK.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ARK's
// API operation BotsChatCompletionsCommon for usage and error information.
func (c *ARK) BotsChatCompletionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BotsChatCompletionsCommonRequest(input)
	return out, req.Send()
}

// BotsChatCompletionsCommonWithContext is the same as BotsChatCompletionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BotsChatCompletionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) BotsChatCompletionsCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BotsChatCompletionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBotsChatCompletions = "BotsChatCompletions"

// BotsChatCompletionsRequest generates a "byteplus/request.Request" representing the
// client's request for the BotsChatCompletions operation. The "output" return
// value will be populated with the BotsChatCompletionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BotsChatCompletionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after BotsChatCompletionsCommon Send returns without error.
//
// See BotsChatCompletions for more information on using the BotsChatCompletions
// API call, and error handling.
//
//    // Example sending a request using the BotsChatCompletionsRequest method.
//    req, resp := client.BotsChatCompletionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) BotsChatCompletionsRequest(input *BotsChatCompletionsInput) (req *request.Request, output *BotsChatCompletionsOutput) {
	op := &request.Operation{
		Name:       opBotsChatCompletions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BotsChatCompletionsInput{}
	}

	output = &BotsChatCompletionsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BotsChatCompletions API operation for ARK.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ARK's
// API operation BotsChatCompletions for usage and error information.
func (c *ARK) BotsChatCompletions(input *BotsChatCompletionsInput) (*BotsChatCompletionsOutput, error) {
	req, out := c.BotsChatCompletionsRequest(input)
	return out, req.Send()
}

// BotsChatCompletionsWithContext is the same as BotsChatCompletions with the addition of
// the ability to pass a context and additional request options.
//
// See BotsChatCompletions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) BotsChatCompletionsWithContext(ctx byteplus.Context, input *BotsChatCompletionsInput, opts ...request.Option) (*BotsChatCompletionsOutput, error) {
	req, out := c.BotsChatCompletionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type Bot_usageForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Model_usage []*Model_usageForBotsChatCompletionsOutput `type:"list" json:"model_usage,omitempty"`
}

// String returns the string representation
func (s Bot_usageForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Bot_usageForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetModel_usage sets the Model_usage field's value.
func (s *Bot_usageForBotsChatCompletionsOutput) SetModel_usage(v []*Model_usageForBotsChatCompletionsOutput) *Bot_usageForBotsChatCompletionsOutput {
	s.Model_usage = v
	return s
}

type BotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Frequency_penalty *float64 `type:"float" json:"frequency_penalty,omitempty"`

	Logit_bias *Logit_biasForBotsChatCompletionsInput `type:"structure" json:"logit_bias,omitempty"`

	Logprobs *bool `type:"boolean" json:"logprobs,omitempty"`

	Max_tokens *int32 `type:"int32" json:"max_tokens,omitempty"`

	Messages []*MessageForBotsChatCompletionsInput `type:"list" json:"messages,omitempty"`

	Metadata *MetadataForBotsChatCompletionsInput `type:"structure" json:"metadata,omitempty"`

	// Model is a required field
	Model *string `type:"string" json:"model,omitempty" required:"true"`

	Stop []*string `type:"list" json:"stop,omitempty"`

	Stream *bool `type:"boolean" json:"stream,omitempty"`

	Stream_options *Stream_optionsForBotsChatCompletionsInput `type:"structure" json:"stream_options,omitempty"`

	Temperature *float64 `type:"float" json:"temperature,omitempty"`

	Tools []*ToolForBotsChatCompletionsInput `type:"list" json:"tools,omitempty"`

	Top_logprobs *int32 `type:"int32" json:"top_logprobs,omitempty"`

	Top_p *float64 `type:"float" json:"top_p,omitempty"`
}

// String returns the string representation
func (s BotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s BotsChatCompletionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *BotsChatCompletionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "BotsChatCompletionsInput"}
	if s.Model == nil {
		invalidParams.Add(request.NewErrParamRequired("Model"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFrequency_penalty sets the Frequency_penalty field's value.
func (s *BotsChatCompletionsInput) SetFrequency_penalty(v float64) *BotsChatCompletionsInput {
	s.Frequency_penalty = &v
	return s
}

// SetLogit_bias sets the Logit_bias field's value.
func (s *BotsChatCompletionsInput) SetLogit_bias(v *Logit_biasForBotsChatCompletionsInput) *BotsChatCompletionsInput {
	s.Logit_bias = v
	return s
}

// SetLogprobs sets the Logprobs field's value.
func (s *BotsChatCompletionsInput) SetLogprobs(v bool) *BotsChatCompletionsInput {
	s.Logprobs = &v
	return s
}

// SetMax_tokens sets the Max_tokens field's value.
func (s *BotsChatCompletionsInput) SetMax_tokens(v int32) *BotsChatCompletionsInput {
	s.Max_tokens = &v
	return s
}

// SetMessages sets the Messages field's value.
func (s *BotsChatCompletionsInput) SetMessages(v []*MessageForBotsChatCompletionsInput) *BotsChatCompletionsInput {
	s.Messages = v
	return s
}

// SetMetadata sets the Metadata field's value.
func (s *BotsChatCompletionsInput) SetMetadata(v *MetadataForBotsChatCompletionsInput) *BotsChatCompletionsInput {
	s.Metadata = v
	return s
}

// SetModel sets the Model field's value.
func (s *BotsChatCompletionsInput) SetModel(v string) *BotsChatCompletionsInput {
	s.Model = &v
	return s
}

// SetStop sets the Stop field's value.
func (s *BotsChatCompletionsInput) SetStop(v []*string) *BotsChatCompletionsInput {
	s.Stop = v
	return s
}

// SetStream sets the Stream field's value.
func (s *BotsChatCompletionsInput) SetStream(v bool) *BotsChatCompletionsInput {
	s.Stream = &v
	return s
}

// SetStream_options sets the Stream_options field's value.
func (s *BotsChatCompletionsInput) SetStream_options(v *Stream_optionsForBotsChatCompletionsInput) *BotsChatCompletionsInput {
	s.Stream_options = v
	return s
}

// SetTemperature sets the Temperature field's value.
func (s *BotsChatCompletionsInput) SetTemperature(v float64) *BotsChatCompletionsInput {
	s.Temperature = &v
	return s
}

// SetTools sets the Tools field's value.
func (s *BotsChatCompletionsInput) SetTools(v []*ToolForBotsChatCompletionsInput) *BotsChatCompletionsInput {
	s.Tools = v
	return s
}

// SetTop_logprobs sets the Top_logprobs field's value.
func (s *BotsChatCompletionsInput) SetTop_logprobs(v int32) *BotsChatCompletionsInput {
	s.Top_logprobs = &v
	return s
}

// SetTop_p sets the Top_p field's value.
func (s *BotsChatCompletionsInput) SetTop_p(v float64) *BotsChatCompletionsInput {
	s.Top_p = &v
	return s
}

type BotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Bot_usage *Bot_usageForBotsChatCompletionsOutput `type:"structure" json:"bot_usage,omitempty"`

	Choices []*ChoiceForBotsChatCompletionsOutput `type:"list" json:"choices,omitempty"`

	Created *int32 `type:"int32" json:"created,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Metadata *MetadataForBotsChatCompletionsOutput `type:"structure" json:"metadata,omitempty"`

	Model *string `type:"string" json:"model,omitempty"`

	Object *string `type:"string" json:"object,omitempty"`

	References []*ReferenceForBotsChatCompletionsOutput `type:"list" json:"references,omitempty"`
}

// String returns the string representation
func (s BotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s BotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetBot_usage sets the Bot_usage field's value.
func (s *BotsChatCompletionsOutput) SetBot_usage(v *Bot_usageForBotsChatCompletionsOutput) *BotsChatCompletionsOutput {
	s.Bot_usage = v
	return s
}

// SetChoices sets the Choices field's value.
func (s *BotsChatCompletionsOutput) SetChoices(v []*ChoiceForBotsChatCompletionsOutput) *BotsChatCompletionsOutput {
	s.Choices = v
	return s
}

// SetCreated sets the Created field's value.
func (s *BotsChatCompletionsOutput) SetCreated(v int32) *BotsChatCompletionsOutput {
	s.Created = &v
	return s
}

// SetId sets the Id field's value.
func (s *BotsChatCompletionsOutput) SetId(v string) *BotsChatCompletionsOutput {
	s.Id = &v
	return s
}

// SetMetadata sets the Metadata field's value.
func (s *BotsChatCompletionsOutput) SetMetadata(v *MetadataForBotsChatCompletionsOutput) *BotsChatCompletionsOutput {
	s.Metadata = v
	return s
}

// SetModel sets the Model field's value.
func (s *BotsChatCompletionsOutput) SetModel(v string) *BotsChatCompletionsOutput {
	s.Model = &v
	return s
}

// SetObject sets the Object field's value.
func (s *BotsChatCompletionsOutput) SetObject(v string) *BotsChatCompletionsOutput {
	s.Object = &v
	return s
}

// SetReferences sets the References field's value.
func (s *BotsChatCompletionsOutput) SetReferences(v []*ReferenceForBotsChatCompletionsOutput) *BotsChatCompletionsOutput {
	s.References = v
	return s
}

type ChoiceForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Delta *DeltaForBotsChatCompletionsOutput `type:"structure" json:"delta,omitempty"`

	Finish_reason *string `type:"string" json:"finish_reason,omitempty"`

	Index *int32 `type:"int32" json:"index,omitempty"`

	Logprobs *LogprobsForBotsChatCompletionsOutput `type:"structure" json:"logprobs,omitempty"`

	Message *MessageForBotsChatCompletionsOutput `type:"structure" json:"message,omitempty"`
}

// String returns the string representation
func (s ChoiceForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ChoiceForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetDelta sets the Delta field's value.
func (s *ChoiceForBotsChatCompletionsOutput) SetDelta(v *DeltaForBotsChatCompletionsOutput) *ChoiceForBotsChatCompletionsOutput {
	s.Delta = v
	return s
}

// SetFinish_reason sets the Finish_reason field's value.
func (s *ChoiceForBotsChatCompletionsOutput) SetFinish_reason(v string) *ChoiceForBotsChatCompletionsOutput {
	s.Finish_reason = &v
	return s
}

// SetIndex sets the Index field's value.
func (s *ChoiceForBotsChatCompletionsOutput) SetIndex(v int32) *ChoiceForBotsChatCompletionsOutput {
	s.Index = &v
	return s
}

// SetLogprobs sets the Logprobs field's value.
func (s *ChoiceForBotsChatCompletionsOutput) SetLogprobs(v *LogprobsForBotsChatCompletionsOutput) *ChoiceForBotsChatCompletionsOutput {
	s.Logprobs = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ChoiceForBotsChatCompletionsOutput) SetMessage(v *MessageForBotsChatCompletionsOutput) *ChoiceForBotsChatCompletionsOutput {
	s.Message = v
	return s
}

type ContentForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bytes []*int32 `type:"list" json:"bytes,omitempty"`

	Logprob *float64 `type:"float" json:"logprob,omitempty"`

	Token *string `type:"string" json:"token,omitempty"`

	Top_logprobs []*Top_logprobForBotsChatCompletionsOutput `type:"list" json:"top_logprobs,omitempty"`
}

// String returns the string representation
func (s ContentForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ContentForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetBytes sets the Bytes field's value.
func (s *ContentForBotsChatCompletionsOutput) SetBytes(v []*int32) *ContentForBotsChatCompletionsOutput {
	s.Bytes = v
	return s
}

// SetLogprob sets the Logprob field's value.
func (s *ContentForBotsChatCompletionsOutput) SetLogprob(v float64) *ContentForBotsChatCompletionsOutput {
	s.Logprob = &v
	return s
}

// SetToken sets the Token field's value.
func (s *ContentForBotsChatCompletionsOutput) SetToken(v string) *ContentForBotsChatCompletionsOutput {
	s.Token = &v
	return s
}

// SetTop_logprobs sets the Top_logprobs field's value.
func (s *ContentForBotsChatCompletionsOutput) SetTop_logprobs(v []*Top_logprobForBotsChatCompletionsOutput) *ContentForBotsChatCompletionsOutput {
	s.Top_logprobs = v
	return s
}

type ConvertfunctionForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:"description,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Parameters *ParametersForBotsChatCompletionsInput `type:"structure" json:"parameters,omitempty"`
}

// String returns the string representation
func (s ConvertfunctionForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertfunctionForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ConvertfunctionForBotsChatCompletionsInput) SetDescription(v string) *ConvertfunctionForBotsChatCompletionsInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *ConvertfunctionForBotsChatCompletionsInput) SetName(v string) *ConvertfunctionForBotsChatCompletionsInput {
	s.Name = &v
	return s
}

// SetParameters sets the Parameters field's value.
func (s *ConvertfunctionForBotsChatCompletionsInput) SetParameters(v *ParametersForBotsChatCompletionsInput) *ConvertfunctionForBotsChatCompletionsInput {
	s.Parameters = v
	return s
}

type Converttool_callForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Function *FunctionForBotsChatCompletionsOutput `type:"structure" json:"function,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Type *string `type:"string" json:"type,omitempty"`
}

// String returns the string representation
func (s Converttool_callForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Converttool_callForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetFunction sets the Function field's value.
func (s *Converttool_callForBotsChatCompletionsOutput) SetFunction(v *FunctionForBotsChatCompletionsOutput) *Converttool_callForBotsChatCompletionsOutput {
	s.Function = v
	return s
}

// SetId sets the Id field's value.
func (s *Converttool_callForBotsChatCompletionsOutput) SetId(v string) *Converttool_callForBotsChatCompletionsOutput {
	s.Id = &v
	return s
}

// SetType sets the Type field's value.
func (s *Converttool_callForBotsChatCompletionsOutput) SetType(v string) *Converttool_callForBotsChatCompletionsOutput {
	s.Type = &v
	return s
}

type DeltaForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content *string `type:"string" json:"content,omitempty"`

	Role *string `type:"string" json:"role,omitempty"`

	Tool_calls []*Tool_callForBotsChatCompletionsOutput `type:"list" json:"tool_calls,omitempty"`
}

// String returns the string representation
func (s DeltaForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DeltaForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *DeltaForBotsChatCompletionsOutput) SetContent(v string) *DeltaForBotsChatCompletionsOutput {
	s.Content = &v
	return s
}

// SetRole sets the Role field's value.
func (s *DeltaForBotsChatCompletionsOutput) SetRole(v string) *DeltaForBotsChatCompletionsOutput {
	s.Role = &v
	return s
}

// SetTool_calls sets the Tool_calls field's value.
func (s *DeltaForBotsChatCompletionsOutput) SetTool_calls(v []*Tool_callForBotsChatCompletionsOutput) *DeltaForBotsChatCompletionsOutput {
	s.Tool_calls = v
	return s
}

type FunctionForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Arguments *string `type:"string" json:"arguments,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s FunctionForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FunctionForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetArguments sets the Arguments field's value.
func (s *FunctionForBotsChatCompletionsInput) SetArguments(v string) *FunctionForBotsChatCompletionsInput {
	s.Arguments = &v
	return s
}

// SetName sets the Name field's value.
func (s *FunctionForBotsChatCompletionsInput) SetName(v string) *FunctionForBotsChatCompletionsInput {
	s.Name = &v
	return s
}

type FunctionForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Arguments *string `type:"string" json:"arguments,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s FunctionForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s FunctionForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetArguments sets the Arguments field's value.
func (s *FunctionForBotsChatCompletionsOutput) SetArguments(v string) *FunctionForBotsChatCompletionsOutput {
	s.Arguments = &v
	return s
}

// SetName sets the Name field's value.
func (s *FunctionForBotsChatCompletionsOutput) SetName(v string) *FunctionForBotsChatCompletionsOutput {
	s.Name = &v
	return s
}

type Group_chat_configForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s Group_chat_configForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Group_chat_configForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

type Group_chat_configForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s Group_chat_configForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Group_chat_configForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

type Logit_biasForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s Logit_biasForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Logit_biasForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

type LogprobsForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content []*ContentForBotsChatCompletionsOutput `type:"list" json:"content,omitempty"`
}

// String returns the string representation
func (s LogprobsForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s LogprobsForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *LogprobsForBotsChatCompletionsOutput) SetContent(v []*ContentForBotsChatCompletionsOutput) *LogprobsForBotsChatCompletionsOutput {
	s.Content = v
	return s
}

type MessageForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content *string `type:"string" json:"content,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Role *string `type:"string" json:"role,omitempty" enum:"EnumOfroleForBotsChatCompletionsInput"`

	Tool_call_id *string `type:"string" json:"tool_call_id,omitempty"`

	Tool_calls *Tool_callsForBotsChatCompletionsInput `type:"structure" json:"tool_calls,omitempty"`
}

// String returns the string representation
func (s MessageForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s MessageForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *MessageForBotsChatCompletionsInput) SetContent(v string) *MessageForBotsChatCompletionsInput {
	s.Content = &v
	return s
}

// SetName sets the Name field's value.
func (s *MessageForBotsChatCompletionsInput) SetName(v string) *MessageForBotsChatCompletionsInput {
	s.Name = &v
	return s
}

// SetRole sets the Role field's value.
func (s *MessageForBotsChatCompletionsInput) SetRole(v string) *MessageForBotsChatCompletionsInput {
	s.Role = &v
	return s
}

// SetTool_call_id sets the Tool_call_id field's value.
func (s *MessageForBotsChatCompletionsInput) SetTool_call_id(v string) *MessageForBotsChatCompletionsInput {
	s.Tool_call_id = &v
	return s
}

// SetTool_calls sets the Tool_calls field's value.
func (s *MessageForBotsChatCompletionsInput) SetTool_calls(v *Tool_callsForBotsChatCompletionsInput) *MessageForBotsChatCompletionsInput {
	s.Tool_calls = v
	return s
}

type MessageForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content *string `type:"string" json:"content,omitempty"`

	Role *string `type:"string" json:"role,omitempty"`

	Tool_calls []*Converttool_callForBotsChatCompletionsOutput `type:"list" json:"tool_calls,omitempty"`
}

// String returns the string representation
func (s MessageForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s MessageForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *MessageForBotsChatCompletionsOutput) SetContent(v string) *MessageForBotsChatCompletionsOutput {
	s.Content = &v
	return s
}

// SetRole sets the Role field's value.
func (s *MessageForBotsChatCompletionsOutput) SetRole(v string) *MessageForBotsChatCompletionsOutput {
	s.Role = &v
	return s
}

// SetTool_calls sets the Tool_calls field's value.
func (s *MessageForBotsChatCompletionsOutput) SetTool_calls(v []*Converttool_callForBotsChatCompletionsOutput) *MessageForBotsChatCompletionsOutput {
	s.Tool_calls = v
	return s
}

type MetadataForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Emit_intention_signal_extra *string `type:"string" json:"emit_intention_signal_extra,omitempty"`

	Group_chat_config *Group_chat_configForBotsChatCompletionsInput `type:"structure" json:"group_chat_config,omitempty"`

	Target_character_name *string `type:"string" json:"target_character_name,omitempty"`

	User_info *string `type:"string" json:"user_info,omitempty"`
}

// String returns the string representation
func (s MetadataForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s MetadataForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetEmit_intention_signal_extra sets the Emit_intention_signal_extra field's value.
func (s *MetadataForBotsChatCompletionsInput) SetEmit_intention_signal_extra(v string) *MetadataForBotsChatCompletionsInput {
	s.Emit_intention_signal_extra = &v
	return s
}

// SetGroup_chat_config sets the Group_chat_config field's value.
func (s *MetadataForBotsChatCompletionsInput) SetGroup_chat_config(v *Group_chat_configForBotsChatCompletionsInput) *MetadataForBotsChatCompletionsInput {
	s.Group_chat_config = v
	return s
}

// SetTarget_character_name sets the Target_character_name field's value.
func (s *MetadataForBotsChatCompletionsInput) SetTarget_character_name(v string) *MetadataForBotsChatCompletionsInput {
	s.Target_character_name = &v
	return s
}

// SetUser_info sets the User_info field's value.
func (s *MetadataForBotsChatCompletionsInput) SetUser_info(v string) *MetadataForBotsChatCompletionsInput {
	s.User_info = &v
	return s
}

type MetadataForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Emit_intention_signal_extra *string `type:"string" json:"emit_intention_signal_extra,omitempty"`

	Group_chat_config *Group_chat_configForBotsChatCompletionsOutput `type:"structure" json:"group_chat_config,omitempty"`

	Target_character_name *string `type:"string" json:"target_character_name,omitempty"`

	User_info *string `type:"string" json:"user_info,omitempty"`
}

// String returns the string representation
func (s MetadataForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s MetadataForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetEmit_intention_signal_extra sets the Emit_intention_signal_extra field's value.
func (s *MetadataForBotsChatCompletionsOutput) SetEmit_intention_signal_extra(v string) *MetadataForBotsChatCompletionsOutput {
	s.Emit_intention_signal_extra = &v
	return s
}

// SetGroup_chat_config sets the Group_chat_config field's value.
func (s *MetadataForBotsChatCompletionsOutput) SetGroup_chat_config(v *Group_chat_configForBotsChatCompletionsOutput) *MetadataForBotsChatCompletionsOutput {
	s.Group_chat_config = v
	return s
}

// SetTarget_character_name sets the Target_character_name field's value.
func (s *MetadataForBotsChatCompletionsOutput) SetTarget_character_name(v string) *MetadataForBotsChatCompletionsOutput {
	s.Target_character_name = &v
	return s
}

// SetUser_info sets the User_info field's value.
func (s *MetadataForBotsChatCompletionsOutput) SetUser_info(v string) *MetadataForBotsChatCompletionsOutput {
	s.User_info = &v
	return s
}

type Model_usageForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Completion_tokens *int32 `type:"int32" json:"completion_tokens,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Prompt_tokens *int32 `type:"int32" json:"prompt_tokens,omitempty"`

	Total_tokens *int32 `type:"int32" json:"total_tokens,omitempty"`
}

// String returns the string representation
func (s Model_usageForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Model_usageForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetCompletion_tokens sets the Completion_tokens field's value.
func (s *Model_usageForBotsChatCompletionsOutput) SetCompletion_tokens(v int32) *Model_usageForBotsChatCompletionsOutput {
	s.Completion_tokens = &v
	return s
}

// SetName sets the Name field's value.
func (s *Model_usageForBotsChatCompletionsOutput) SetName(v string) *Model_usageForBotsChatCompletionsOutput {
	s.Name = &v
	return s
}

// SetPrompt_tokens sets the Prompt_tokens field's value.
func (s *Model_usageForBotsChatCompletionsOutput) SetPrompt_tokens(v int32) *Model_usageForBotsChatCompletionsOutput {
	s.Prompt_tokens = &v
	return s
}

// SetTotal_tokens sets the Total_tokens field's value.
func (s *Model_usageForBotsChatCompletionsOutput) SetTotal_tokens(v int32) *Model_usageForBotsChatCompletionsOutput {
	s.Total_tokens = &v
	return s
}

type ParametersForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ParametersForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ParametersForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

type ReferenceForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ReferenceForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ReferenceForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

type Stream_optionsForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Include_usage *bool `type:"boolean" json:"include_usage,omitempty"`
}

// String returns the string representation
func (s Stream_optionsForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Stream_optionsForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetInclude_usage sets the Include_usage field's value.
func (s *Stream_optionsForBotsChatCompletionsInput) SetInclude_usage(v bool) *Stream_optionsForBotsChatCompletionsInput {
	s.Include_usage = &v
	return s
}

type ToolForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Function *ConvertfunctionForBotsChatCompletionsInput `type:"structure" json:"function,omitempty"`

	Type *string `type:"string" json:"type,omitempty"`
}

// String returns the string representation
func (s ToolForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ToolForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetFunction sets the Function field's value.
func (s *ToolForBotsChatCompletionsInput) SetFunction(v *ConvertfunctionForBotsChatCompletionsInput) *ToolForBotsChatCompletionsInput {
	s.Function = v
	return s
}

// SetType sets the Type field's value.
func (s *ToolForBotsChatCompletionsInput) SetType(v string) *ToolForBotsChatCompletionsInput {
	s.Type = &v
	return s
}

type Tool_callForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Function *FunctionForBotsChatCompletionsOutput `type:"structure" json:"function,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Index *int32 `type:"int32" json:"index,omitempty"`

	Type *string `type:"string" json:"type,omitempty"`
}

// String returns the string representation
func (s Tool_callForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Tool_callForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetFunction sets the Function field's value.
func (s *Tool_callForBotsChatCompletionsOutput) SetFunction(v *FunctionForBotsChatCompletionsOutput) *Tool_callForBotsChatCompletionsOutput {
	s.Function = v
	return s
}

// SetId sets the Id field's value.
func (s *Tool_callForBotsChatCompletionsOutput) SetId(v string) *Tool_callForBotsChatCompletionsOutput {
	s.Id = &v
	return s
}

// SetIndex sets the Index field's value.
func (s *Tool_callForBotsChatCompletionsOutput) SetIndex(v int32) *Tool_callForBotsChatCompletionsOutput {
	s.Index = &v
	return s
}

// SetType sets the Type field's value.
func (s *Tool_callForBotsChatCompletionsOutput) SetType(v string) *Tool_callForBotsChatCompletionsOutput {
	s.Type = &v
	return s
}

type Tool_callsForBotsChatCompletionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Function *FunctionForBotsChatCompletionsInput `type:"structure" json:"function,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Type *string `type:"string" json:"type,omitempty"`
}

// String returns the string representation
func (s Tool_callsForBotsChatCompletionsInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Tool_callsForBotsChatCompletionsInput) GoString() string {
	return s.String()
}

// SetFunction sets the Function field's value.
func (s *Tool_callsForBotsChatCompletionsInput) SetFunction(v *FunctionForBotsChatCompletionsInput) *Tool_callsForBotsChatCompletionsInput {
	s.Function = v
	return s
}

// SetId sets the Id field's value.
func (s *Tool_callsForBotsChatCompletionsInput) SetId(v string) *Tool_callsForBotsChatCompletionsInput {
	s.Id = &v
	return s
}

// SetType sets the Type field's value.
func (s *Tool_callsForBotsChatCompletionsInput) SetType(v string) *Tool_callsForBotsChatCompletionsInput {
	s.Type = &v
	return s
}

type Top_logprobForBotsChatCompletionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bytes []*int32 `type:"list" json:"bytes,omitempty"`

	Logprob *float64 `type:"float" json:"logprob,omitempty"`

	Token *string `type:"string" json:"token,omitempty"`
}

// String returns the string representation
func (s Top_logprobForBotsChatCompletionsOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s Top_logprobForBotsChatCompletionsOutput) GoString() string {
	return s.String()
}

// SetBytes sets the Bytes field's value.
func (s *Top_logprobForBotsChatCompletionsOutput) SetBytes(v []*int32) *Top_logprobForBotsChatCompletionsOutput {
	s.Bytes = v
	return s
}

// SetLogprob sets the Logprob field's value.
func (s *Top_logprobForBotsChatCompletionsOutput) SetLogprob(v float64) *Top_logprobForBotsChatCompletionsOutput {
	s.Logprob = &v
	return s
}

// SetToken sets the Token field's value.
func (s *Top_logprobForBotsChatCompletionsOutput) SetToken(v string) *Top_logprobForBotsChatCompletionsOutput {
	s.Token = &v
	return s
}

const (
	// EnumOfroleForBotsChatCompletionsInputSystem is a EnumOfroleForBotsChatCompletionsInput enum value
	EnumOfroleForBotsChatCompletionsInputSystem = "system"

	// EnumOfroleForBotsChatCompletionsInputUser is a EnumOfroleForBotsChatCompletionsInput enum value
	EnumOfroleForBotsChatCompletionsInputUser = "user"

	// EnumOfroleForBotsChatCompletionsInputAssistant is a EnumOfroleForBotsChatCompletionsInput enum value
	EnumOfroleForBotsChatCompletionsInputAssistant = "assistant"

	// EnumOfroleForBotsChatCompletionsInputTool is a EnumOfroleForBotsChatCompletionsInput enum value
	EnumOfroleForBotsChatCompletionsInputTool = "tool"
)
