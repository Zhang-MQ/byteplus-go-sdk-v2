// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ark

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opCreateContentsGenerationsTasksCommon = "CreateContentsGenerationsTasks"

// CreateContentsGenerationsTasksCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateContentsGenerationsTasksCommon operation. The "output" return
// value will be populated with the CreateContentsGenerationsTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateContentsGenerationsTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateContentsGenerationsTasksCommon Send returns without error.
//
// See CreateContentsGenerationsTasksCommon for more information on using the CreateContentsGenerationsTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateContentsGenerationsTasksCommonRequest method.
//    req, resp := client.CreateContentsGenerationsTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) CreateContentsGenerationsTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateContentsGenerationsTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateContentsGenerationsTasksCommon API operation for ARK.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ARK's
// API operation CreateContentsGenerationsTasksCommon for usage and error information.
func (c *ARK) CreateContentsGenerationsTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateContentsGenerationsTasksCommonRequest(input)
	return out, req.Send()
}

// CreateContentsGenerationsTasksCommonWithContext is the same as CreateContentsGenerationsTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateContentsGenerationsTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) CreateContentsGenerationsTasksCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateContentsGenerationsTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateContentsGenerationsTasks = "CreateContentsGenerationsTasks"

// CreateContentsGenerationsTasksRequest generates a "byteplus/request.Request" representing the
// client's request for the CreateContentsGenerationsTasks operation. The "output" return
// value will be populated with the CreateContentsGenerationsTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateContentsGenerationsTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateContentsGenerationsTasksCommon Send returns without error.
//
// See CreateContentsGenerationsTasks for more information on using the CreateContentsGenerationsTasks
// API call, and error handling.
//
//    // Example sending a request using the CreateContentsGenerationsTasksRequest method.
//    req, resp := client.CreateContentsGenerationsTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) CreateContentsGenerationsTasksRequest(input *CreateContentsGenerationsTasksInput) (req *request.Request, output *CreateContentsGenerationsTasksOutput) {
	op := &request.Operation{
		Name:       opCreateContentsGenerationsTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateContentsGenerationsTasksInput{}
	}

	output = &CreateContentsGenerationsTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateContentsGenerationsTasks API operation for ARK.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for ARK's
// API operation CreateContentsGenerationsTasks for usage and error information.
func (c *ARK) CreateContentsGenerationsTasks(input *CreateContentsGenerationsTasksInput) (*CreateContentsGenerationsTasksOutput, error) {
	req, out := c.CreateContentsGenerationsTasksRequest(input)
	return out, req.Send()
}

// CreateContentsGenerationsTasksWithContext is the same as CreateContentsGenerationsTasks with the addition of
// the ability to pass a context and additional request options.
//
// See CreateContentsGenerationsTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) CreateContentsGenerationsTasksWithContext(ctx byteplus.Context, input *CreateContentsGenerationsTasksInput, opts ...request.Option) (*CreateContentsGenerationsTasksOutput, error) {
	req, out := c.CreateContentsGenerationsTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ContentForCreateContentsGenerationsTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ContentForCreateContentsGenerationsTasksInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ContentForCreateContentsGenerationsTasksInput) GoString() string {
	return s.String()
}

type CreateContentsGenerationsTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content []*ContentForCreateContentsGenerationsTasksInput `type:"list" json:"content,omitempty"`

	// Model is a required field
	Model *string `type:"string" json:"model,omitempty" required:"true"`
}

// String returns the string representation
func (s CreateContentsGenerationsTasksInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateContentsGenerationsTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateContentsGenerationsTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateContentsGenerationsTasksInput"}
	if s.Model == nil {
		invalidParams.Add(request.NewErrParamRequired("Model"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetContent sets the Content field's value.
func (s *CreateContentsGenerationsTasksInput) SetContent(v []*ContentForCreateContentsGenerationsTasksInput) *CreateContentsGenerationsTasksInput {
	s.Content = v
	return s
}

// SetModel sets the Model field's value.
func (s *CreateContentsGenerationsTasksInput) SetModel(v string) *CreateContentsGenerationsTasksInput {
	s.Model = &v
	return s
}

type CreateContentsGenerationsTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:"id,omitempty"`
}

// String returns the string representation
func (s CreateContentsGenerationsTasksOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateContentsGenerationsTasksOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateContentsGenerationsTasksOutput) SetId(v string) *CreateContentsGenerationsTasksOutput {
	s.Id = &v
	return s
}
