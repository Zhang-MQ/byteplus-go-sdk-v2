// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyTrafficMirrorSessionAttributesCommon = "ModifyTrafficMirrorSessionAttributes"

// ModifyTrafficMirrorSessionAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorSessionAttributesCommon operation. The "output" return
// value will be populated with the ModifyTrafficMirrorSessionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorSessionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorSessionAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorSessionAttributesCommon for more information on using the ModifyTrafficMirrorSessionAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorSessionAttributesCommonRequest method.
//    req, resp := client.ModifyTrafficMirrorSessionAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorSessionAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorSessionAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorSessionAttributesCommon API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorSessionAttributesCommon for usage and error information.
func (c *VPC) ModifyTrafficMirrorSessionAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorSessionAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorSessionAttributesCommonWithContext is the same as ModifyTrafficMirrorSessionAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorSessionAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorSessionAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorSessionAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTrafficMirrorSessionAttributes = "ModifyTrafficMirrorSessionAttributes"

// ModifyTrafficMirrorSessionAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorSessionAttributes operation. The "output" return
// value will be populated with the ModifyTrafficMirrorSessionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorSessionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorSessionAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorSessionAttributes for more information on using the ModifyTrafficMirrorSessionAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorSessionAttributesRequest method.
//    req, resp := client.ModifyTrafficMirrorSessionAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorSessionAttributesRequest(input *ModifyTrafficMirrorSessionAttributesInput) (req *request.Request, output *ModifyTrafficMirrorSessionAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorSessionAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTrafficMirrorSessionAttributesInput{}
	}

	output = &ModifyTrafficMirrorSessionAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorSessionAttributes API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorSessionAttributes for usage and error information.
func (c *VPC) ModifyTrafficMirrorSessionAttributes(input *ModifyTrafficMirrorSessionAttributesInput) (*ModifyTrafficMirrorSessionAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorSessionAttributesRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorSessionAttributesWithContext is the same as ModifyTrafficMirrorSessionAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorSessionAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorSessionAttributesWithContext(ctx byteplus.Context, input *ModifyTrafficMirrorSessionAttributesInput, opts ...request.Option) (*ModifyTrafficMirrorSessionAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorSessionAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTrafficMirrorSessionAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	PacketLength *int64 `type:"integer"`

	Priority *int64 `type:"integer"`

	TrafficMirrorFilterId *string `type:"string"`

	// TrafficMirrorSessionId is a required field
	TrafficMirrorSessionId *string `type:"string" required:"true"`

	TrafficMirrorSessionName *string `type:"string"`

	TrafficMirrorTargetId *string `type:"string"`

	VirtualNetworkId *int64 `type:"integer"`
}

// String returns the string representation
func (s ModifyTrafficMirrorSessionAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorSessionAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTrafficMirrorSessionAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTrafficMirrorSessionAttributesInput"}
	if s.TrafficMirrorSessionId == nil {
		invalidParams.Add(request.NewErrParamRequired("TrafficMirrorSessionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetDescription(v string) *ModifyTrafficMirrorSessionAttributesInput {
	s.Description = &v
	return s
}

// SetPacketLength sets the PacketLength field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetPacketLength(v int64) *ModifyTrafficMirrorSessionAttributesInput {
	s.PacketLength = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetPriority(v int64) *ModifyTrafficMirrorSessionAttributesInput {
	s.Priority = &v
	return s
}

// SetTrafficMirrorFilterId sets the TrafficMirrorFilterId field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetTrafficMirrorFilterId(v string) *ModifyTrafficMirrorSessionAttributesInput {
	s.TrafficMirrorFilterId = &v
	return s
}

// SetTrafficMirrorSessionId sets the TrafficMirrorSessionId field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetTrafficMirrorSessionId(v string) *ModifyTrafficMirrorSessionAttributesInput {
	s.TrafficMirrorSessionId = &v
	return s
}

// SetTrafficMirrorSessionName sets the TrafficMirrorSessionName field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetTrafficMirrorSessionName(v string) *ModifyTrafficMirrorSessionAttributesInput {
	s.TrafficMirrorSessionName = &v
	return s
}

// SetTrafficMirrorTargetId sets the TrafficMirrorTargetId field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetTrafficMirrorTargetId(v string) *ModifyTrafficMirrorSessionAttributesInput {
	s.TrafficMirrorTargetId = &v
	return s
}

// SetVirtualNetworkId sets the VirtualNetworkId field's value.
func (s *ModifyTrafficMirrorSessionAttributesInput) SetVirtualNetworkId(v int64) *ModifyTrafficMirrorSessionAttributesInput {
	s.VirtualNetworkId = &v
	return s
}

type ModifyTrafficMirrorSessionAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyTrafficMirrorSessionAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorSessionAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyTrafficMirrorSessionAttributesOutput) SetRequestId(v string) *ModifyTrafficMirrorSessionAttributesOutput {
	s.RequestId = &v
	return s
}
