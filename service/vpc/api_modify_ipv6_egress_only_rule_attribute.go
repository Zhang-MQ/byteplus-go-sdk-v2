// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyIpv6EgressOnlyRuleAttributeCommon = "ModifyIpv6EgressOnlyRuleAttribute"

// ModifyIpv6EgressOnlyRuleAttributeCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyIpv6EgressOnlyRuleAttributeCommon operation. The "output" return
// value will be populated with the ModifyIpv6EgressOnlyRuleAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyIpv6EgressOnlyRuleAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyIpv6EgressOnlyRuleAttributeCommon Send returns without error.
//
// See ModifyIpv6EgressOnlyRuleAttributeCommon for more information on using the ModifyIpv6EgressOnlyRuleAttributeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyIpv6EgressOnlyRuleAttributeCommonRequest method.
//    req, resp := client.ModifyIpv6EgressOnlyRuleAttributeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyIpv6EgressOnlyRuleAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyIpv6EgressOnlyRuleAttributeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyIpv6EgressOnlyRuleAttributeCommon API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyIpv6EgressOnlyRuleAttributeCommon for usage and error information.
func (c *VPC) ModifyIpv6EgressOnlyRuleAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyIpv6EgressOnlyRuleAttributeCommonRequest(input)
	return out, req.Send()
}

// ModifyIpv6EgressOnlyRuleAttributeCommonWithContext is the same as ModifyIpv6EgressOnlyRuleAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyIpv6EgressOnlyRuleAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyIpv6EgressOnlyRuleAttributeCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyIpv6EgressOnlyRuleAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyIpv6EgressOnlyRuleAttribute = "ModifyIpv6EgressOnlyRuleAttribute"

// ModifyIpv6EgressOnlyRuleAttributeRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyIpv6EgressOnlyRuleAttribute operation. The "output" return
// value will be populated with the ModifyIpv6EgressOnlyRuleAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyIpv6EgressOnlyRuleAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyIpv6EgressOnlyRuleAttributeCommon Send returns without error.
//
// See ModifyIpv6EgressOnlyRuleAttribute for more information on using the ModifyIpv6EgressOnlyRuleAttribute
// API call, and error handling.
//
//    // Example sending a request using the ModifyIpv6EgressOnlyRuleAttributeRequest method.
//    req, resp := client.ModifyIpv6EgressOnlyRuleAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyIpv6EgressOnlyRuleAttributeRequest(input *ModifyIpv6EgressOnlyRuleAttributeInput) (req *request.Request, output *ModifyIpv6EgressOnlyRuleAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyIpv6EgressOnlyRuleAttribute,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyIpv6EgressOnlyRuleAttributeInput{}
	}

	output = &ModifyIpv6EgressOnlyRuleAttributeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyIpv6EgressOnlyRuleAttribute API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyIpv6EgressOnlyRuleAttribute for usage and error information.
func (c *VPC) ModifyIpv6EgressOnlyRuleAttribute(input *ModifyIpv6EgressOnlyRuleAttributeInput) (*ModifyIpv6EgressOnlyRuleAttributeOutput, error) {
	req, out := c.ModifyIpv6EgressOnlyRuleAttributeRequest(input)
	return out, req.Send()
}

// ModifyIpv6EgressOnlyRuleAttributeWithContext is the same as ModifyIpv6EgressOnlyRuleAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyIpv6EgressOnlyRuleAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyIpv6EgressOnlyRuleAttributeWithContext(ctx byteplus.Context, input *ModifyIpv6EgressOnlyRuleAttributeInput, opts ...request.Option) (*ModifyIpv6EgressOnlyRuleAttributeOutput, error) {
	req, out := c.ModifyIpv6EgressOnlyRuleAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyIpv6EgressOnlyRuleAttributeInput struct {
	_ struct{} `type:"structure"`

	// Ipv6EgressOnlyRuleId is a required field
	Ipv6EgressOnlyRuleId *string `type:"string" required:"true"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s ModifyIpv6EgressOnlyRuleAttributeInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyIpv6EgressOnlyRuleAttributeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyIpv6EgressOnlyRuleAttributeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyIpv6EgressOnlyRuleAttributeInput"}
	if s.Ipv6EgressOnlyRuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("Ipv6EgressOnlyRuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIpv6EgressOnlyRuleId sets the Ipv6EgressOnlyRuleId field's value.
func (s *ModifyIpv6EgressOnlyRuleAttributeInput) SetIpv6EgressOnlyRuleId(v string) *ModifyIpv6EgressOnlyRuleAttributeInput {
	s.Ipv6EgressOnlyRuleId = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModifyIpv6EgressOnlyRuleAttributeInput) SetName(v string) *ModifyIpv6EgressOnlyRuleAttributeInput {
	s.Name = &v
	return s
}

type ModifyIpv6EgressOnlyRuleAttributeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyIpv6EgressOnlyRuleAttributeOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyIpv6EgressOnlyRuleAttributeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyIpv6EgressOnlyRuleAttributeOutput) SetRequestId(v string) *ModifyIpv6EgressOnlyRuleAttributeOutput {
	s.RequestId = &v
	return s
}
