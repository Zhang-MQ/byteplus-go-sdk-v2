// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opDescribeIpAddressPoolAttributesCommon = "DescribeIpAddressPoolAttributes"

// DescribeIpAddressPoolAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeIpAddressPoolAttributesCommon operation. The "output" return
// value will be populated with the DescribeIpAddressPoolAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpAddressPoolAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpAddressPoolAttributesCommon Send returns without error.
//
// See DescribeIpAddressPoolAttributesCommon for more information on using the DescribeIpAddressPoolAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpAddressPoolAttributesCommonRequest method.
//    req, resp := client.DescribeIpAddressPoolAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeIpAddressPoolAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeIpAddressPoolAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeIpAddressPoolAttributesCommon API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation DescribeIpAddressPoolAttributesCommon for usage and error information.
func (c *VPC) DescribeIpAddressPoolAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeIpAddressPoolAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeIpAddressPoolAttributesCommonWithContext is the same as DescribeIpAddressPoolAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpAddressPoolAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeIpAddressPoolAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeIpAddressPoolAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeIpAddressPoolAttributes = "DescribeIpAddressPoolAttributes"

// DescribeIpAddressPoolAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the DescribeIpAddressPoolAttributes operation. The "output" return
// value will be populated with the DescribeIpAddressPoolAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpAddressPoolAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpAddressPoolAttributesCommon Send returns without error.
//
// See DescribeIpAddressPoolAttributes for more information on using the DescribeIpAddressPoolAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpAddressPoolAttributesRequest method.
//    req, resp := client.DescribeIpAddressPoolAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeIpAddressPoolAttributesRequest(input *DescribeIpAddressPoolAttributesInput) (req *request.Request, output *DescribeIpAddressPoolAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeIpAddressPoolAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeIpAddressPoolAttributesInput{}
	}

	output = &DescribeIpAddressPoolAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeIpAddressPoolAttributes API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation DescribeIpAddressPoolAttributes for usage and error information.
func (c *VPC) DescribeIpAddressPoolAttributes(input *DescribeIpAddressPoolAttributesInput) (*DescribeIpAddressPoolAttributesOutput, error) {
	req, out := c.DescribeIpAddressPoolAttributesRequest(input)
	return out, req.Send()
}

// DescribeIpAddressPoolAttributesWithContext is the same as DescribeIpAddressPoolAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpAddressPoolAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeIpAddressPoolAttributesWithContext(ctx byteplus.Context, input *DescribeIpAddressPoolAttributesInput, opts ...request.Option) (*DescribeIpAddressPoolAttributesOutput, error) {
	req, out := c.DescribeIpAddressPoolAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeIpAddressPoolAttributesInput struct {
	_ struct{} `type:"structure"`

	// IpAddressPoolId is a required field
	IpAddressPoolId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeIpAddressPoolAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpAddressPoolAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeIpAddressPoolAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeIpAddressPoolAttributesInput"}
	if s.IpAddressPoolId == nil {
		invalidParams.Add(request.NewErrParamRequired("IpAddressPoolId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIpAddressPoolId sets the IpAddressPoolId field's value.
func (s *DescribeIpAddressPoolAttributesInput) SetIpAddressPoolId(v string) *DescribeIpAddressPoolAttributesInput {
	s.IpAddressPoolId = &v
	return s
}

type DescribeIpAddressPoolAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BusinessStatus *string `type:"string"`

	CidrBlocks []*string `type:"list"`

	CreationTime *string `type:"string"`

	DeletedTime *string `type:"string"`

	Description *string `type:"string"`

	ISP *string `type:"string"`

	IpAddressPoolId *string `type:"string"`

	Name *string `type:"string"`

	OverdueTime *string `type:"string"`

	ProjectName *string `type:"string"`

	RequestId *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeIpAddressPoolAttributesOutput `type:"list"`

	TotalIpCount *int64 `type:"integer"`

	UpdateTime *string `type:"string"`

	UsedIpCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeIpAddressPoolAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpAddressPoolAttributesOutput) GoString() string {
	return s.String()
}

// SetBusinessStatus sets the BusinessStatus field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetBusinessStatus(v string) *DescribeIpAddressPoolAttributesOutput {
	s.BusinessStatus = &v
	return s
}

// SetCidrBlocks sets the CidrBlocks field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetCidrBlocks(v []*string) *DescribeIpAddressPoolAttributesOutput {
	s.CidrBlocks = v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetCreationTime(v string) *DescribeIpAddressPoolAttributesOutput {
	s.CreationTime = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetDeletedTime(v string) *DescribeIpAddressPoolAttributesOutput {
	s.DeletedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetDescription(v string) *DescribeIpAddressPoolAttributesOutput {
	s.Description = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetISP(v string) *DescribeIpAddressPoolAttributesOutput {
	s.ISP = &v
	return s
}

// SetIpAddressPoolId sets the IpAddressPoolId field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetIpAddressPoolId(v string) *DescribeIpAddressPoolAttributesOutput {
	s.IpAddressPoolId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetName(v string) *DescribeIpAddressPoolAttributesOutput {
	s.Name = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetOverdueTime(v string) *DescribeIpAddressPoolAttributesOutput {
	s.OverdueTime = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetProjectName(v string) *DescribeIpAddressPoolAttributesOutput {
	s.ProjectName = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetRequestId(v string) *DescribeIpAddressPoolAttributesOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetStatus(v string) *DescribeIpAddressPoolAttributesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetTags(v []*TagForDescribeIpAddressPoolAttributesOutput) *DescribeIpAddressPoolAttributesOutput {
	s.Tags = v
	return s
}

// SetTotalIpCount sets the TotalIpCount field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetTotalIpCount(v int64) *DescribeIpAddressPoolAttributesOutput {
	s.TotalIpCount = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetUpdateTime(v string) *DescribeIpAddressPoolAttributesOutput {
	s.UpdateTime = &v
	return s
}

// SetUsedIpCount sets the UsedIpCount field's value.
func (s *DescribeIpAddressPoolAttributesOutput) SetUsedIpCount(v int64) *DescribeIpAddressPoolAttributesOutput {
	s.UsedIpCount = &v
	return s
}

type TagForDescribeIpAddressPoolAttributesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeIpAddressPoolAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeIpAddressPoolAttributesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeIpAddressPoolAttributesOutput) SetKey(v string) *TagForDescribeIpAddressPoolAttributesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeIpAddressPoolAttributesOutput) SetValue(v string) *TagForDescribeIpAddressPoolAttributesOutput {
	s.Value = &v
	return s
}
