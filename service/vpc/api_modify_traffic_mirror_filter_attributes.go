// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyTrafficMirrorFilterAttributesCommon = "ModifyTrafficMirrorFilterAttributes"

// ModifyTrafficMirrorFilterAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorFilterAttributesCommon operation. The "output" return
// value will be populated with the ModifyTrafficMirrorFilterAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorFilterAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorFilterAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorFilterAttributesCommon for more information on using the ModifyTrafficMirrorFilterAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorFilterAttributesCommonRequest method.
//    req, resp := client.ModifyTrafficMirrorFilterAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorFilterAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorFilterAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorFilterAttributesCommon API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorFilterAttributesCommon for usage and error information.
func (c *VPC) ModifyTrafficMirrorFilterAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorFilterAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorFilterAttributesCommonWithContext is the same as ModifyTrafficMirrorFilterAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorFilterAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorFilterAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorFilterAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTrafficMirrorFilterAttributes = "ModifyTrafficMirrorFilterAttributes"

// ModifyTrafficMirrorFilterAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorFilterAttributes operation. The "output" return
// value will be populated with the ModifyTrafficMirrorFilterAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorFilterAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorFilterAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorFilterAttributes for more information on using the ModifyTrafficMirrorFilterAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorFilterAttributesRequest method.
//    req, resp := client.ModifyTrafficMirrorFilterAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorFilterAttributesRequest(input *ModifyTrafficMirrorFilterAttributesInput) (req *request.Request, output *ModifyTrafficMirrorFilterAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorFilterAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTrafficMirrorFilterAttributesInput{}
	}

	output = &ModifyTrafficMirrorFilterAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorFilterAttributes API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorFilterAttributes for usage and error information.
func (c *VPC) ModifyTrafficMirrorFilterAttributes(input *ModifyTrafficMirrorFilterAttributesInput) (*ModifyTrafficMirrorFilterAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorFilterAttributesRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorFilterAttributesWithContext is the same as ModifyTrafficMirrorFilterAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorFilterAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorFilterAttributesWithContext(ctx byteplus.Context, input *ModifyTrafficMirrorFilterAttributesInput, opts ...request.Option) (*ModifyTrafficMirrorFilterAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorFilterAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTrafficMirrorFilterAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	// TrafficMirrorFilterId is a required field
	TrafficMirrorFilterId *string `type:"string" required:"true"`

	TrafficMirrorFilterName *string `type:"string"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorFilterAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTrafficMirrorFilterAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTrafficMirrorFilterAttributesInput"}
	if s.TrafficMirrorFilterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TrafficMirrorFilterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyTrafficMirrorFilterAttributesInput) SetDescription(v string) *ModifyTrafficMirrorFilterAttributesInput {
	s.Description = &v
	return s
}

// SetTrafficMirrorFilterId sets the TrafficMirrorFilterId field's value.
func (s *ModifyTrafficMirrorFilterAttributesInput) SetTrafficMirrorFilterId(v string) *ModifyTrafficMirrorFilterAttributesInput {
	s.TrafficMirrorFilterId = &v
	return s
}

// SetTrafficMirrorFilterName sets the TrafficMirrorFilterName field's value.
func (s *ModifyTrafficMirrorFilterAttributesInput) SetTrafficMirrorFilterName(v string) *ModifyTrafficMirrorFilterAttributesInput {
	s.TrafficMirrorFilterName = &v
	return s
}

type ModifyTrafficMirrorFilterAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorFilterAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyTrafficMirrorFilterAttributesOutput) SetRequestId(v string) *ModifyTrafficMirrorFilterAttributesOutput {
	s.RequestId = &v
	return s
}
