// Code generated by byteplus with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/byteplusutil"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/request"
	"github.com/byteplus-sdk/byteplus-go-sdk-v2/byteplus/response"
)

const opModifyTrafficMirrorFilterRuleAttributesCommon = "ModifyTrafficMirrorFilterRuleAttributes"

// ModifyTrafficMirrorFilterRuleAttributesCommonRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorFilterRuleAttributesCommon operation. The "output" return
// value will be populated with the ModifyTrafficMirrorFilterRuleAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorFilterRuleAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorFilterRuleAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorFilterRuleAttributesCommon for more information on using the ModifyTrafficMirrorFilterRuleAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorFilterRuleAttributesCommonRequest method.
//    req, resp := client.ModifyTrafficMirrorFilterRuleAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorFilterRuleAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorFilterRuleAttributesCommon API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorFilterRuleAttributesCommon for usage and error information.
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorFilterRuleAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorFilterRuleAttributesCommonWithContext is the same as ModifyTrafficMirrorFilterRuleAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorFilterRuleAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributesCommonWithContext(ctx byteplus.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTrafficMirrorFilterRuleAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTrafficMirrorFilterRuleAttributes = "ModifyTrafficMirrorFilterRuleAttributes"

// ModifyTrafficMirrorFilterRuleAttributesRequest generates a "byteplus/request.Request" representing the
// client's request for the ModifyTrafficMirrorFilterRuleAttributes operation. The "output" return
// value will be populated with the ModifyTrafficMirrorFilterRuleAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTrafficMirrorFilterRuleAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTrafficMirrorFilterRuleAttributesCommon Send returns without error.
//
// See ModifyTrafficMirrorFilterRuleAttributes for more information on using the ModifyTrafficMirrorFilterRuleAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTrafficMirrorFilterRuleAttributesRequest method.
//    req, resp := client.ModifyTrafficMirrorFilterRuleAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributesRequest(input *ModifyTrafficMirrorFilterRuleAttributesInput) (req *request.Request, output *ModifyTrafficMirrorFilterRuleAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTrafficMirrorFilterRuleAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTrafficMirrorFilterRuleAttributesInput{}
	}

	output = &ModifyTrafficMirrorFilterRuleAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTrafficMirrorFilterRuleAttributes API operation for VPC.
//
// Returns bytepluserr.Error for service API and SDK errors. Use runtime type assertions
// with bytepluserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the BYTEPLUS API reference guide for VPC's
// API operation ModifyTrafficMirrorFilterRuleAttributes for usage and error information.
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributes(input *ModifyTrafficMirrorFilterRuleAttributesInput) (*ModifyTrafficMirrorFilterRuleAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorFilterRuleAttributesRequest(input)
	return out, req.Send()
}

// ModifyTrafficMirrorFilterRuleAttributesWithContext is the same as ModifyTrafficMirrorFilterRuleAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTrafficMirrorFilterRuleAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyTrafficMirrorFilterRuleAttributesWithContext(ctx byteplus.Context, input *ModifyTrafficMirrorFilterRuleAttributesInput, opts ...request.Option) (*ModifyTrafficMirrorFilterRuleAttributesOutput, error) {
	req, out := c.ModifyTrafficMirrorFilterRuleAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTrafficMirrorFilterRuleAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	DestinationCidrBlock *string `type:"string"`

	DestinationPortRange *string `type:"string"`

	Policy *string `type:"string" enum:"PolicyForModifyTrafficMirrorFilterRuleAttributesInput"`

	Priority *int64 `type:"integer"`

	Protocol *string `type:"string" enum:"ProtocolForModifyTrafficMirrorFilterRuleAttributesInput"`

	SourceCidrBlock *string `type:"string"`

	SourcePortRange *string `type:"string"`

	TrafficDirection *string `type:"string" enum:"TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInput"`

	// TrafficMirrorFilterRuleId is a required field
	TrafficMirrorFilterRuleId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterRuleAttributesInput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorFilterRuleAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTrafficMirrorFilterRuleAttributesInput"}
	if s.TrafficMirrorFilterRuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("TrafficMirrorFilterRuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetDescription(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.Description = &v
	return s
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetDestinationCidrBlock(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetDestinationPortRange sets the DestinationPortRange field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetDestinationPortRange(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.DestinationPortRange = &v
	return s
}

// SetPolicy sets the Policy field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetPolicy(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.Policy = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetPriority(v int64) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.Priority = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetProtocol(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.Protocol = &v
	return s
}

// SetSourceCidrBlock sets the SourceCidrBlock field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetSourceCidrBlock(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.SourceCidrBlock = &v
	return s
}

// SetSourcePortRange sets the SourcePortRange field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetSourcePortRange(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.SourcePortRange = &v
	return s
}

// SetTrafficDirection sets the TrafficDirection field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetTrafficDirection(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.TrafficDirection = &v
	return s
}

// SetTrafficMirrorFilterRuleId sets the TrafficMirrorFilterRuleId field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesInput) SetTrafficMirrorFilterRuleId(v string) *ModifyTrafficMirrorFilterRuleAttributesInput {
	s.TrafficMirrorFilterRuleId = &v
	return s
}

type ModifyTrafficMirrorFilterRuleAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterRuleAttributesOutput) String() string {
	return byteplusutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTrafficMirrorFilterRuleAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyTrafficMirrorFilterRuleAttributesOutput) SetRequestId(v string) *ModifyTrafficMirrorFilterRuleAttributesOutput {
	s.RequestId = &v
	return s
}

const (
	// PolicyForModifyTrafficMirrorFilterRuleAttributesInputAccept is a PolicyForModifyTrafficMirrorFilterRuleAttributesInput enum value
	PolicyForModifyTrafficMirrorFilterRuleAttributesInputAccept = "accept"

	// PolicyForModifyTrafficMirrorFilterRuleAttributesInputReject is a PolicyForModifyTrafficMirrorFilterRuleAttributesInput enum value
	PolicyForModifyTrafficMirrorFilterRuleAttributesInputReject = "reject"
)

const (
	// ProtocolForModifyTrafficMirrorFilterRuleAttributesInputIcmp is a ProtocolForModifyTrafficMirrorFilterRuleAttributesInput enum value
	ProtocolForModifyTrafficMirrorFilterRuleAttributesInputIcmp = "icmp"

	// ProtocolForModifyTrafficMirrorFilterRuleAttributesInputIcmpv6 is a ProtocolForModifyTrafficMirrorFilterRuleAttributesInput enum value
	ProtocolForModifyTrafficMirrorFilterRuleAttributesInputIcmpv6 = "icmpv6"

	// ProtocolForModifyTrafficMirrorFilterRuleAttributesInputTcp is a ProtocolForModifyTrafficMirrorFilterRuleAttributesInput enum value
	ProtocolForModifyTrafficMirrorFilterRuleAttributesInputTcp = "tcp"

	// ProtocolForModifyTrafficMirrorFilterRuleAttributesInputUdp is a ProtocolForModifyTrafficMirrorFilterRuleAttributesInput enum value
	ProtocolForModifyTrafficMirrorFilterRuleAttributesInputUdp = "udp"

	// ProtocolForModifyTrafficMirrorFilterRuleAttributesInputAll is a ProtocolForModifyTrafficMirrorFilterRuleAttributesInput enum value
	ProtocolForModifyTrafficMirrorFilterRuleAttributesInputAll = "all"
)

const (
	// TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInputEgress is a TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInput enum value
	TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInputEgress = "egress"

	// TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInputIngress is a TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInput enum value
	TrafficDirectionForModifyTrafficMirrorFilterRuleAttributesInputIngress = "ingress"
)
